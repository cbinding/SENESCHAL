//==============================================================================
// Creator : Ceri Binding, University of Glamorgan
// Project : SENESCHAL
// Classes : SENESCHAL_SKOS.stg
// Version : 002
// Summary : string template group for use with STELLAR application
// License : http://creativecommons.org/licenses/by/3.0/ 
// =============================================================================
// History :
// 001 20/10/2011 CFB Initially created template group in STELLAR project
// 002 27/03/2013 CFB Branched version specifically for SENESCHAL project
//============================================================================//
delimiters "$", "$"
import "SENESCHAL_RDF.stg"
//import "SENESCHAL_CCBY.stg"

// Usage: $SKOS_TYPE.PREFLABEL$ etc.
SKOS_TYPE(type) ::= "$SKOS_TYPE.(type)$"
SKOS_TYPE ::= [
"COLLECTABLEPROPERTY"	: "skos:CollectableProperty",
"COLLECTION"		: "skos:Collection",
"CONCEPT"		: "skos:Concept",
"CONCEPTSCHEME"		: "skos:ConceptScheme",
"ORDEREDCOLLECTION"	: "skos:OrderedCollection",		
"ALTLABEL"		: "skos:altLabel",
"ALTSYMBOL"		: "skos:altSymbol",
"BROADER"		: "skos:broader",
"CHANGENOTE"		: "skos:changeNote",
"DEFINITION"		: "skos:definition",
"EDITORIALNOTE"		: "skos:editorialNote",
"EXAMPLE"		: "skos:example",
"HASTOPCONCEPT"		: "skos:hasTopConcept",
"HIDDENLABEL"		: "skos:hiddenLabel",
"HISTORYNOTE"		: "skos:historyNote",
"INSCHEME"		: "skos:inScheme",
"ISPRIMARYSUBJECTOF"	: "skos:isPrimarySubjectOf",
"ISSUBJECTOF"		: "skos:isSubjectOf",
"MEMBER"		: "skos:member",
"MEMBERLIST"		: "skos:memberList",
"NARROWER"		: "skos:narrower",
"NOTATION"		: "skos:notation",
"NOTE"			: "skos:note",
"PREFLABEL"		: "skos:prefLabel",
"PREFSYMBOL"		: "skos:prefSymbol",
"PRIMARYSUBJECT"	: "skos:primarySubject",
"RELATED"		: "skos:related",
"SCOPENOTE"		: "skos:scopeNote",
"SEMANTICRELATION"	: "skos:semanticRelation",
"SUBJECT"		: "skos:subject",
"SUBJECTINDICATOR"	: "skos:subjectIndicator",
"SYMBOL"		: "skos:symbol",
"TOPCONCEPTOF"		: "skos:topConceptOf",
"BROADMATCH"		: "skos:broadMatch",
"EXACTMATCH"		: "skos:exactMatch",
"NARROWMATCH"		: "skos:narrowMatch",
"RELATEDMATCH"		: "skos:relatedMatch",
default			: key
]

// Build consistently formatted identifiers (URIs) for SENESCHAL SKOS entity instances
// Usage e.g. CONCEPT_URI("http://mydata/", "123", "456") => "http://mydata/schemes/123/concepts/456"
// Usage e.g. SCHEME_URI("http://mydata/", "123") => "http://mydata/schemes/123"
CONCEPT_URI(prefix, scheme_id, concept_id) ::= "$trim(prefix)$schemes/$urlencode(scheme_id)$/concepts/$urlencode(concept_id)$"
SCHEME_URI(prefix, scheme_id) ::= "$trim(prefix)$schemes/$urlencode(scheme_id)$"

// SKOS_CONCEPT. Fields anticipated:
// data.concept_id [mandatory]
// data.scheme_id
// data.preflabel
// data.altlabel
// data.hiddenlabel
// data.notation
// data.note
// data.scopenote
// data.changenote
// data.definition
// data.editorialnote
// data.example
// data.historynote
// data.broader_id
// data.related_id
// data.language
// data.version
// data.licenseURL - licensing
// data.attributionURL - attribution
// data.attributionName 
// data.ddcno - mapped DDC numbers we have for RCHMW monuments
// data.created
// data.modified
// data.publisher
// data.issued
SKOS_CONCEPT(options, data) ::= <<

$if(data.scheme_id && data.concept_id)$
$! create the SKOS Concept entity with URI !$
$RDF_ENTITY(
	uri=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	type=SKOS_TYPE.CONCEPT
)$

$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.INSCHEME, 
	object=SCHEME_URI(options.base_uri, data.scheme_id)
)$

$! for linked data, identifier is the URI !$
<rdf:Description rdf:about="$CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id)$">
	<dcterms:identifier>$xmlencode(CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id))$</dcterms:identifier>
</rdf:Description>

$! CC license URL = "http://creativecommons.org/licenses/by/3.0" !$
$! Open Government License URL = http://reference.data.gov.uk/id/open-government-licence !$
$if(data.licenseURL)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate="cc:license", 
	object=data.licenseURL
)$
$endif$

$if(data.attributionURL)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate="cc:attributionURL", 
	object=data.attributionURL
)$
$endif$

$if(data.attributionName)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate="cc:attributionName", 
	literal=data.attributionName,
	language=data.language
)$
$endif$

$if(data.preflabel)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.PREFLABEL, 
	literal=data.preflabel, 
	language=data.language
)$
$endif$

$if(data.altlabel)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.ALTLABEL, 
	literal=data.altlabel, 
	language=data.language
)$
$endif$

$if(data.hiddenlabel)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.HIDDENLABEL, 
	literal=data.hiddenlabel, 
	language=data.language
)$
$endif$

$if(data.notation)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.NOTATION, 
	literal=data.notation, 
	language=data.language
)$
$endif$

$if(data.note)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.HIDDENLABEL, 
	literal=data.note, 
	language=data.language
)$
$endif$

$if(data.scopenote)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.SCOPENOTE,
	literal=data.scopenote, 
	language=data.language
)$
$endif$

$if(data.changenote)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.CHANGENOTE, 
	literal=data.changenote, 
	language=data.language
)$
$endif$

$if(data.definition)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.DEFINITION, 
	literal=data.definition, 
	language=data.language
)$
$endif$

$if(data.editorialnote)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.EDITORIALNOTE, 
	literal=data.editorialnote, 
	language=data.language
)$
$endif$

$if(data.example)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.EXAMPLE, 
	literal=data.example, 
	language=data.language
)$
$endif$

$if(data.historynote)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.HISTORYNOTE, 
	literal=data.historynote, 
	language=data.language
)$
$endif$

$if(data.broader_id)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.BROADER, 
	inverse=SKOS_TYPE.NARROWER, 
	object=CONCEPT_URI(options.base_uri, data.scheme_id, data.broader_id)
)$
$endif$

$if(data.related_id)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.RELATED, 
	object=CONCEPT_URI(options.base_uri, data.scheme_id, data.related_id)
)$
$endif$

$if(data.ddcno)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate=SKOS_TYPE.BROADMATCH, 
	object=["http://dewey.info/class/", data.ddcno, "/"] 
)$
$endif$

$if(data.created)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate="dcterms:created", 
	literal=data.created,
	datatype="http://www.w3.org/2001/XMLSchema#dateTime"
)$
$endif$

$if(data.modified)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate="dcterms:modified", 
	literal=data.modified,
	datatype="http://www.w3.org/2001/XMLSchema#dateTime"
)$
$endif$

$if(data.publisher)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate="dcterms:publisher", 
	object=data.publisher	
)$
$endif$

$if(data.issued)$
$RDF_PROPERTY(
	subject=CONCEPT_URI(options.base_uri, data.scheme_id, data.concept_id), 
	predicate="dcterms:issued", 
	literal=data.issued,
	datatype="http://www.w3.org/2001/XMLSchema#dateTime"
)$
$endif$

$else$
$RDF_COMMENT("scheme_id or concept_id is not present")$
$endif$
$! TODO: SKOS SKOS_XL & SKOS match relationships !$
>>

// SKOS_CONCEPTSCHEME. Fields anticipated:
// data.scheme_id [mandatory]
// data.title
// data.description
// data.creator
// data.topconcept_id
// data.licenseURL - licensing
// data.attributionURL - attribution
// data.attributionName 
// data.coverage
// data.language
// data.created
// data.modified
// data.publisher
// data.issued
SKOS_CONCEPTSCHEME(options, data) ::= <<
$if(data.scheme_id)$
$RDF_ENTITY(
	uri=SCHEME_URI(options.base_uri, data.scheme_id),
	type=SKOS_TYPE.CONCEPTSCHEME
)$

$! for linked data, identifier is the URI. Note - this is a clearer template !$
<rdf:Description rdf:about="$SCHEME_URI(options.base_uri, data.scheme_id)$">
	<dcterms:identifier>$xmlencode(SCHEME_URI(options.base_uri, data.scheme_id))$</dcterms:identifier>
</rdf:Description>

$! (EH, RCAHMW) CC license URL = "http://creativecommons.org/licenses/by/3.0" !$
$! (RCAHMS) Open Government License URL = http://reference.data.gov.uk/id/open-government-licence !$
$if(data.licenseURL)$
$RDF_PROPERTY(
	subject=SCHEME_URI(options.base_uri, data.scheme_id), 
	predicate="cc:license", 
	object=data.licenseURL
)$
$endif$

$if(data.attributionURL)$
$RDF_PROPERTY(
	subject=SCHEME_URI(options.base_uri, data.scheme_id),
	predicate="cc:attributionURL", 
	object=data.attributionURL
)$
$endif$

$if(data.attributionName)$
$RDF_PROPERTY(
	subject=SCHEME_URI(options.base_uri, data.scheme_id),
	predicate="cc:attributionName", 
	literal=data.attributionName,
	language=data.language
)$
$endif$

$if(data.title)$
$RDF_PROPERTY(
	subject=SCHEME_URI(options.base_uri, data.scheme_id),
	predicate="dcterms:title", 
	literal=data.title, 
	language=data.language
)$
$RDF_PROPERTY(
	subject=SCHEME_URI(options.base_uri, data.scheme_id),
	predicate="rdfs:label", 
	literal=data.title, 
	language=data.language
)$
$endif$	

$if(data.description)$
$RDF_PROPERTY(
	subject=SCHEME_URI(options.base_uri, data.scheme_id),
	predicate="dcterms:description", 
	literal=data.description, 
	language=data.language
)$
$endif$

$if(data.creator)$
$RDF_PROPERTY(
	subject=SCHEME_URI(options.base_uri, data.scheme_id),
	predicate="dcterms:creator", 
	literal=data.creator, 
	language=data.language
)$
$endif$

$if(data.topconcept_id)$
$RDF_PROPERTY(
	subject=SCHEME_URI(options.base_uri, data.scheme_id),
	predicate=SKOS_TYPE.HASTOPCONCEPT, 
	inverse=SKOS_TYPE.TOPCONCEPTOF, 
	object=CONCEPT_URI(options.base_uri, data.scheme_id, data.topconcept_id)
)$
$endif$

$if(data.coverage)$
$RDF_PROPERTY(
	subject=SCHEME_URI(options.base_uri, data.scheme_id),
	predicate="dcterms:coverage", 
	object=data.coverage
)$
$endif$

$if(data.created)$
$RDF_PROPERTY(
	subject=SCHEME_URI(options.base_uri, data.scheme_id),
	predicate="dcterms:created", 
	literal=data.created,
	datatype="http://www.w3.org/2001/XMLSchema#dateTime"
)$
$endif$

$if(data.modified)$
$RDF_PROPERTY(
	subject=SCHEME_URI(options.base_uri, data.scheme_id),
	predicate="dcterms:modified", 
	literal=data.modified,
	datatype="http://www.w3.org/2001/XMLSchema#dateTime"
)$
$endif$

$if(data.publisher)$
$RDF_PROPERTY(
	subject=SCHEME_URI(options.base_uri, data.scheme_id),
	predicate="dcterms:publisher", 
	object=data.publisher
)$
$endif$

$if(data.issued)$
$RDF_PROPERTY(
	subject=SCHEME_URI(options.base_uri, data.scheme_id),
	predicate="dcterms:issued", 
	literal=data.issued,
	datatype="http://www.w3.org/2001/XMLSchema#dateTime"
)$
$endif$

$else$
$RDF_COMMENT("scheme_id is not present")$
$endif$
>>




